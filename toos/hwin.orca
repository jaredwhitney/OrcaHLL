import "Window"
import "String"
classdef HelloWorldWindowProgram
	
	int_s type_text = 0
	
	func _init (void : null)
		sys Console.PrintLine("Hello world!")
		DisplayWindow()
		int ramPercent = 30;sys GetMemPercent()
		PrintRamInfo(ramPercent)
		sys Console.Print("1 + 2 = ")
		sys Console.PrintHex(AddOneAndTwo())
		sys Console.Newline()
		
	func DisplayWindow (void : null)
		Window w = sys Dolphin.CreateWindow("Test Window", type_text)
		String text = "Txhxixsx xixsx xax xtxexsxtx.x"
		;sys Console.PrintLine(text.RawToWhite())
		w.xPos = 20
		PrintBufferInfo()
		w.buffer = text
		PrintBufferInfo()
		;asm("mov ecx, [ecx]")
		;asm("mov byte [ecx], 'H'")
		;asm("add ecx, 1")
		;asm("mov byte [ecx], 0xFF")
		;asm("add ecx, 1")
		;asm("mov byte [ecx], 'I'")
		;asm("add ecx, 1")
		;asm("mov byte [ecx], 0xFF")
		;asm("add ecx, 1")
		;sys Console.PrintHex(w)
		;sys Console.Newline()
		;sys Console.PrintHex(w.buffer); = text;.RawToWhite()
		;sys Console.Newline()
		;sys Console.PrintHex(asm("mov ecx, [ecx]"))
		;sys Console.Newline()
		;w.xPos = 10
	
	func PrintBufferInfo (void : Window w)
		sys Console.Print("w.buffer: ")
		sys Console.PrintHex(w.buffer)
		sys Console.Newline()
		sys Console.Print("[w.buffer]: ")
		w.buffer
		asm("mov ecx, [ecx]")
		asm("push ecx")
		sys Console.PrintHex()
		sys Console.Newline()
	
	func PrintRamInfo (void : int ramPercent)
		if ramPercent > 50
			sys Console.PrintLine("Over half of RAM in use!")
		if ramPercent <= 50
			sys Console.PrintLine("Under half of RAM in use!")
		sys Console.Print("Percentage of RAM in use: ")
		sys Console.PrintHex(ramPercent)
		sys Console.Newline("")
	
	func AddOneAndTwo (int : null)
		return 1 + 2
